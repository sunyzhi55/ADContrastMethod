from torch.nn import CrossEntropyLoss
from torch.optim import *
from Net import *
from vapformer.model_components import thenet
from MDL_Net.MDL_Net import generate_model
from RLAD_Net.taad import get_model
from HyperFusionNet.HyperFusion_AD_model import HyperFusion_AD
from utils.api import *
from loss_function import joint_loss, loss_in_IMF
from utils.basic import get_scheduler
from Dataset_monai import *


models = {
'ITCFN':{
        'Name': 'Triple_model_CoAttention_Fusion',
        'Model': Triple_model_CoAttention_Fusion,
        'dataset': MriPetCliDataset,
        'shape': (96, 128, 96),
        # 'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': joint_loss,
        'Optimizer': Adam,
        'Lr': 0.0001,
        'w1': 0.2,
        'w2': 0.01,
        'weight_decay': None,
        'Scheduler': get_scheduler,
        'Run': run_main_1
    },
'ITFN':{
        'Name': 'Triple_model_Fusion',
        'Model': Triple_model_Fusion,
        'dataset': MriPetCliDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': joint_loss,
        'Optimizer': Adam,
        'Lr': 0.0001,
        'w1': 0.2,
        'w2': 0.01,
        'weight_decay': None,
        'Scheduler': get_scheduler,
        'Run': run_main_1
    },
'TFN':{
        'Name': 'Triple_model_Fusion_Incomplete',
        'Model': Triple_model_Fusion,
        'dataset': MriPetCliDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': joint_loss,
        'Optimizer': Adam,
        'Lr': 0.0001,
        'w1': 0.2,
        'w2': 0.01,
        'weight_decay': None,
        'Scheduler': get_scheduler,
        'Run': run_main_1
    },
'TCFN':{
        'Name': 'Triple_model_CoAttention_Fusion_Incomplete',
        'Model': Triple_model_CoAttention_Fusion,
        'dataset': MriPetCliDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': joint_loss,
        'Optimizer': Adam,
        'Lr': 0.0001,
        'w1': 0.2,
        'w2': 0.01,
        'weight_decay': None,
        'Scheduler': get_scheduler,
        'Run': run_main_1
    },
'HFBSurv': {
        'Name': 'HFBSurv',
        'weight_decay': None,
        'Lr': 0.0001,
        'Model': HFBSurv,
        'dataset': MriPetCliDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Optimizer': Adam,
        'Loss': CrossEntropyLoss,
        'Scheduler': get_scheduler,
        'Run': run_main_for_hfbsurve,
    },
'IMF':{
        'Name': 'Interactive_Multimodal_Fusion_Model',
        'Model': Interactive_Multimodal_Fusion_Model,
        'dataset': MriPetCliDatasetWithTowLabel,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': loss_in_IMF,
        'Optimizer': Adam,
        'Lr': 0.0001,
        'w1': 0.2,
        'w2': 0.01,
        'weight_decay': None,
        'Scheduler': get_scheduler,
        'Run': run_main_for_IMF,
    },
'MDL':{
        'Name': 'MDL_Net',
        # generate_model(model_depth=18, in_planes=1, num_classes=2)
        'Model': generate_model,
        'dataset': GMWMPETDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': CrossEntropyLoss,
        'Optimizer': SGD,
        'Lr': 0.001,
        'weight_decay':0.01,
        'momentum':0.9,
        'label_smoothing':0.2,
        'Run': run_main_for_MDL,
        'Scheduler': get_scheduler,
},
'Resnet':{
        'Name': 'ResnetMriPet',
        # generate_model(model_depth=18, in_planes=1, num_classes=2)
        'Model': ResnetMriPet,
        'dataset': MriPetDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': CrossEntropyLoss,
        'Optimizer': Adam,
        'Lr': 0.001,
        'weight_decay': None,
        'Run': run_main_for_resnet,
        'Scheduler': get_scheduler,
},
'Poolformer':{
        'Name': 'MetaFormerMriPet',
        # generate_model(model_depth=18, in_planes=1, num_classes=2)
        'Model': MetaFormerMriPet,
        'dataset': MriPetDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': CrossEntropyLoss,
        'Optimizer': Adam,
        'Lr': 0.001,
        'weight_decay': None,
        'Run': run_main_for_resnet,
        'Scheduler': get_scheduler,
},
'EfficientNet':{
        'Name': 'EfficientNetMriPet',
        # generate_model(model_depth=18, in_planes=1, num_classes=2)
        'Model': EfficientNetMriPet,
        'dataset': MriPetDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': CrossEntropyLoss,
        'Optimizer': Adam,
        'Lr': 0.001,
        'weight_decay': None,
        'Run': run_main_for_resnet,
        'Scheduler': get_scheduler,
},
'VisionTransformer':{
        'Name': 'VisionTransformer',
        # generate_model(model_depth=18, in_planes=1, num_classes=2)
        'Model': ViTMriPet,
        'dataset': MriPetDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': CrossEntropyLoss,
        'Optimizer': Adam,
        'Lr': 0.001,
        'weight_decay': None,
        'Run': run_main_for_resnet,
        'Scheduler': get_scheduler,
},
'HyperFusionNet':{
        'Name': 'HyperFusionNet',
        # generate_model(model_depth=18, in_planes=1, num_classes=2)
        'Model': HyperFusion_AD,
        'dataset': MriCliDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': CrossEntropyLoss,
        'Optimizer': Adam,
        'Lr': 0.001,
        'weight_decay': None,
        'Run': run_main_for_hyper_fusion,
        'Scheduler': get_scheduler,
},
'VAPL':{
        'Name': 'VAPL',
        # generate_model(model_depth=18, in_planes=1, num_classes=2)
        'Model': thenet,
        'dataset': MriCliDataset,
        'shape': (96, 128, 96),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': CrossEntropyLoss,
        'Optimizer': AdamW,
        'Lr': 0.00001,
        'weight_decay': 5e-4,
        'Run': run_main_for_hyper_vapl,
        'Scheduler': get_scheduler,
},
'RLAD':{
        'Name': 'RLAD_Net',
        # generate_model(model_depth=18, in_planes=1, num_classes=2)
        'Model': get_model,
        'dataset': MriDataset,
        'shape': (128, 128, 128),
#         'task': ("pMCI", "sMCI"),
        'task': ("AD", "CN"),
        # 'task': ("AD", "MCI", "CN"),
        'Loss': CrossEntropyLoss,
        'Optimizer': Adam,
        'Lr': 0.001,
        'weight_decay':1e-5,
        'Run': run_main_for_RLAD,
        'Scheduler': get_scheduler,
}

}
